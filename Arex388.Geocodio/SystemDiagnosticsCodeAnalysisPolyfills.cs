// <auto-generated/>
#pragma warning disable
#nullable enable annotations

// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

namespace System.Diagnostics.CodeAnalysis;

/// <summary>
/// Specifies that this constructor sets all required members for the current type,
/// and callers do not need to set any required members themselves.
/// </summary>
[global::System.AttributeUsage(global::System.AttributeTargets.Constructor, AllowMultiple = false, Inherited = false)]
[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
internal sealed class SetsRequiredMembersAttribute : global::System.Attribute {
}

/// <summary>
/// Specifies that when a method returns <see cref="ReturnValue"/>, the parameter will not be null even if the corresponding type allows it.
/// </summary>
[global::System.AttributeUsage(global::System.AttributeTargets.Parameter, Inherited = false)]
[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
internal sealed class NotNullWhenAttribute : global::System.Attribute {
	/// <summary>
	/// Initializes the attribute with the specified return value condition.
	/// </summary>
	/// <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
	public NotNullWhenAttribute(bool returnValue) {
		ReturnValue = returnValue;
	}

	/// <summary>Gets the return value condition.</summary>
	public bool ReturnValue { get; }
}

/// <summary>
/// Applied to a method that will never return under any circumstance.
/// </summary>
[global::System.AttributeUsage(global::System.AttributeTargets.Method, Inherited = false)]
[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
internal sealed class DoesNotReturnAttribute : global::System.Attribute {
}